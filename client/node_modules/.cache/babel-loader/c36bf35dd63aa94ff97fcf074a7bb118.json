{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from \"./user.actions\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["/Users/thomasrago/Desktop/triumph-clothes/triumph-clothes/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","isUserAuthenticated","onCheckUserSession","CHECK_USER_SESSION","signOut","onSignOutStart","SIGN_OUT_START","signUp","displayName","createUserWithEmailAndPassword","additionalData","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport {\n  signInSuccess,\n  signInFailure,\n  signOutSuccess,\n  signOutFailure,\n  signUpSuccess,\n  signUpFailure,\n} from \"./user.actions\";\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n  getCurrentUser,\n} from \"../../firebase/firebase.utils\";\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    put(signInFailure(error));\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    put(signInFailure(error));\n  }\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n\nexport function* signUp({ payload: { email, password, displayName } }) {\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({ user, additionalData: { displayName } }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\n\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutStart),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}