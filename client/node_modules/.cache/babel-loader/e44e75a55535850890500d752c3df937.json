{"ast":null,"code":"var _jsxFileName = \"/Users/thomasrago/Desktop/triumph-clothes/triumph-clothes/src/components/SignIn/SignIn.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\";\nimport { auth, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport \"./SignIn.scss\";\n\nclass SignInAndSignUp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      displayName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    };\n\n    this.handleSignInSubmit = async e => {\n      e.preventDefault();\n      const {\n        emailSignInStart\n      } = this.props;\n      const {\n        email,\n        password\n      } = this.state;\n      emailSignInStart(email, password);\n    };\n\n    this.handleSignUpSubmit = async e => {\n      e.preventDefault();\n      const {\n        displayName,\n        email,\n        password,\n        confirmPassword\n      } = this.state;\n\n      if (password !== confirmPassword) {\n        alert(\"Passwords don't match\");\n        return;\n      }\n\n      try {\n        const {\n          user\n        } = await auth.createUserWithEmailAndPassword(email, password);\n        await createUserProfileDocument(user, {\n          displayName\n        });\n        this.setState({\n          displayName: \"\",\n          email: \"\",\n          password: \"\",\n          confirmPassword: \"\"\n        });\n      } catch (error) {\n        console.log(error);\n      }\n\n      this.setState({\n        email: \"\",\n        password: \"\"\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"SignIn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-html\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"tab-1\",\n      type: \"radio\",\n      name: \"tab\",\n      className: \"sign-in\",\n      defaultChecked: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"tab-1\",\n      className: \"tab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, \"Sign In\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"tab-2\",\n      type: \"radio\",\n      name: \"tab\",\n      className: \"sign-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"tab-2\",\n      className: \"tab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-in-htm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleChange,\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      className: \"input\",\n      value: this.state.email,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"pass\",\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"password\",\n      type: \"password\",\n      className: \"input\",\n      value: this.state.password,\n      \"data-type\": \"password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"check\",\n      type: \"checkbox\",\n      className: \"check\",\n      defaultChecked: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 19\n      }\n    }), \" Keep me Signed in\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      onClick: this.handleSignInSubmit,\n      type: \"submit\",\n      className: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, \"Sign In\"), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"button\",\n      style: {\n        marginTop: \"20px\",\n        paddingTop: \"10px\"\n      },\n      onClick: googleSignInStart,\n      className: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, \"Sign in with\", /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        width: \"20px\",\n        position: \"relative\",\n        top: \"4px\",\n        left: \"5px\"\n      },\n      alt: \"google\",\n      src: \"https://img.icons8.com/color/48/000000/google-logo.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"hr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"foot-lnk\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#forgot\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, \"Forgot Password?\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-up-htm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"displayName\",\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }, \"Display Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"displayName\",\n      onChange: this.handleChange,\n      type: \"text\",\n      className: \"input\",\n      value: this.state.displayName,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    }, \"Email Address\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"email\",\n      onChange: this.handleChange,\n      type: \"email\",\n      className: \"input\",\n      value: this.state.email,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"pass\",\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"password\",\n      type: \"password\",\n      className: \"input\",\n      \"data-type\": \"password\",\n      value: this.state.password,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"pass\",\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }\n    }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"confirmPassword\",\n      onChange: this.handleChange,\n      type: \"password\",\n      className: \"input\",\n      \"data-type\": \"password\",\n      value: this.state.confirmPassword,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      onClick: this.handleSignUpSubmit,\n      type: \"submit\",\n      className: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    }, \"Sign Up\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"hr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"foot-lnk\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"tab-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }\n    }, \"Already Member?\"))))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignInAndSignUp);","map":{"version":3,"sources":["/Users/thomasrago/Desktop/triumph-clothes/triumph-clothes/src/components/SignIn/SignIn.js"],"names":["React","connect","CustomButton","googleSignInStart","emailSignInStart","auth","createUserProfileDocument","SignInAndSignUp","Component","state","displayName","email","password","confirmPassword","handleSignInSubmit","e","preventDefault","props","handleSignUpSubmit","alert","user","createUserWithEmailAndPassword","setState","error","console","log","handleChange","target","name","value","render","marginTop","paddingTop","width","position","top","left","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport {\n  googleSignInStart,\n  emailSignInStart,\n} from \"../../redux/user/user.actions\";\nimport { auth, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport \"./SignIn.scss\";\n\nclass SignInAndSignUp extends React.Component {\n  state = {\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  };\n\n  handleSignInSubmit = async (e) => {\n    e.preventDefault();\n    const { emailSignInStart } = this.props;\n    const { email, password } = this.state;\n\n    emailSignInStart(email, password);\n  };\n\n  handleSignUpSubmit = async (e) => {\n    e.preventDefault();\n\n    const { displayName, email, password, confirmPassword } = this.state;\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords don't match\");\n      return;\n    }\n\n    try {\n      const { user } = await auth.createUserWithEmailAndPassword(\n        email,\n        password\n      );\n\n      await createUserProfileDocument(user, { displayName });\n\n      this.setState({\n        displayName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    this.setState({\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  render() {\n    const { googleSignInStart } = this.props;\n    return (\n      <div className=\"SignIn\">\n        <div className=\"login-html\">\n          <input\n            id=\"tab-1\"\n            type=\"radio\"\n            name=\"tab\"\n            className=\"sign-in\"\n            defaultChecked\n          />\n          <label htmlFor=\"tab-1\" className=\"tab\">\n            Sign In\n          </label>\n          <input id=\"tab-2\" type=\"radio\" name=\"tab\" className=\"sign-up\" />\n          <label htmlFor=\"tab-2\" className=\"tab\">\n            Sign Up\n          </label>\n          <div className=\"login-form\">\n            <div className=\"sign-in-htm\">\n              <div className=\"group\">\n                <label htmlFor=\"email\" className=\"label\">\n                  Email\n                </label>\n                <input\n                  onChange={this.handleChange}\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  className=\"input\"\n                  value={this.state.email}\n                  required\n                />\n              </div>\n              <div className=\"group\">\n                <label htmlFor=\"pass\" className=\"label\">\n                  Password\n                </label>\n                <input\n                  onChange={this.handleChange}\n                  name=\"password\"\n                  type=\"password\"\n                  className=\"input\"\n                  value={this.state.password}\n                  data-type=\"password\"\n                  required\n                />\n              </div>\n              <div className=\"group\">\n                <input\n                  id=\"check\"\n                  type=\"checkbox\"\n                  className=\"check\"\n                  defaultChecked\n                />\n                <label htmlFor=\"check\">\n                  <span className=\"icon\"></span> Keep me Signed in\n                </label>\n              </div>\n              <div className=\"group\">\n                <CustomButton\n                  onClick={this.handleSignInSubmit}\n                  type=\"submit\"\n                  className=\"button\"\n                >\n                  Sign In\n                </CustomButton>\n                <CustomButton\n                  type=\"button\"\n                  style={{ marginTop: \"20px\", paddingTop: \"10px\" }}\n                  onClick={googleSignInStart}\n                  className=\"button\"\n                >\n                  Sign in with\n                  <img\n                    style={{\n                      width: \"20px\",\n                      position: \"relative\",\n                      top: \"4px\",\n                      left: \"5px\",\n                    }}\n                    alt=\"google\"\n                    src=\"https://img.icons8.com/color/48/000000/google-logo.png\"\n                  />\n                </CustomButton>\n              </div>\n              <div className=\"hr\"></div>\n              <div className=\"foot-lnk\">\n                <a href=\"#forgot\">Forgot Password?</a>\n              </div>\n            </div>\n            <div className=\"sign-up-htm\">\n              <div className=\"group\">\n                <label htmlFor=\"displayName\" className=\"label\">\n                  Display Name\n                </label>\n                <input\n                  name=\"displayName\"\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  className=\"input\"\n                  value={this.state.displayName}\n                  required\n                />\n              </div>\n              <div className=\"group\">\n                <label htmlFor=\"email\" className=\"label\">\n                  Email Address\n                </label>\n                <input\n                  name=\"email\"\n                  onChange={this.handleChange}\n                  type=\"email\"\n                  className=\"input\"\n                  value={this.state.email}\n                  required\n                />\n              </div>\n              <div className=\"group\">\n                <label htmlFor=\"pass\" className=\"label\">\n                  Password\n                </label>\n                <input\n                  onChange={this.handleChange}\n                  name=\"password\"\n                  type=\"password\"\n                  className=\"input\"\n                  data-type=\"password\"\n                  value={this.state.password}\n                  required\n                />\n              </div>\n              <div className=\"group\">\n                <label htmlFor=\"pass\" className=\"label\">\n                  Confirm Password\n                </label>\n                <input\n                  name=\"confirmPassword\"\n                  onChange={this.handleChange}\n                  type=\"password\"\n                  className=\"input\"\n                  data-type=\"password\"\n                  value={this.state.confirmPassword}\n                  required\n                />\n              </div>\n\n              <div className=\"group\">\n                <CustomButton\n                  onClick={this.handleSignUpSubmit}\n                  type=\"submit\"\n                  className=\"button\"\n                >\n                  Sign Up\n                </CustomButton>\n              </div>\n              <div className=\"hr\"></div>\n              <div className=\"foot-lnk\">\n                <label htmlFor=\"tab-1\">Already Member?</label>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) =>\n    dispatch(emailSignInStart({ email, password })),\n});\n\nexport default connect(null, mapDispatchToProps)(SignInAndSignUp);\n"]},"metadata":{},"sourceType":"module"}